---
layout: post
title:  "자바의 객체지향, 메소드, 생성자"
date:   2020-01-12 10:00:45
description: 자바의 객체지향
comments: true
categories: 
- blog
- programming
- java
---

객체지향, 메소드, 생성자의 정의



객체지향의 개념:

객체 지향 프로그래밍은 컴퓨터 프로그래밍 패러다임중 하나로,  **프로그래밍에서 필요한 데이터를 추상화시키고, 상태와 행위를 가진 객체를 만들어 그 객체들 간의 상호작용을 통해 로직을 구성하는 프로그래밍 방법**이다.

클래스:[객체 지향 프로그래밍](https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)(OOP)에서 특정 객체를 생성하기 위해 변수와 메소드를 정의하는 일종의 틀이다. 객체를 정의 하기 위한 상태(멤버변수)와 메서드(함수)로 구성된다.

메서드:비유하자면, 믹서기라고 생각해도 된다. 믹서기에는 과일을 넣고(입력) 갈려진 과일이 나온다(출력,리턴값),

실생활에서 우리는 규칙적인 것을 계속해서 적을 때가 있다. 이때가 바로 메서드가 필요할 때인 것이다. 메서드는 규칙성을 찾아서 무언가를 작성할 때 아주 유용하다.

다음은 메서드의 구조이다:

> **public**  리턴자료형 메소드명(입력자료형1 입력변수1, 입력자료형2 입력변수2, …) { …  **return**  리턴값; // 리턴자료형이 void 인 경우에는 return 문이 필요없다.
> 
> }

메서드는 또, 출력과 입력, 각각의 유무로 총 4가지로 분류될 수 있다.

-   입력과 출력이 모두 있는 메소드
-   입력과 출력이 모두 없는 메소드
-   입력은 없고 출력은 있는 메소드
-   입력은 있고 출력은 없는 메소드

생성자:

생성자란 초기클래스의 변수를 정하는 역할을 한다.

뭘 정의할게 없는 생성자는, 기본생성자라 한다.

기본생성자는 정의해주지 않아도 javac로 컴파일할 때, 자동 생성이 되서 안적어줘도 된다.


