---
layout: post
title:  "자바GUI설명"
date:   2020-01-11 10:09:38
description: 자바GUI예제
categories: 
- blog
- programming
- java
---

-자바의 gui에 대한 여러가지 예제들

# 가.자바 GUI

## 1.java.awt
java.awt패키지의 클래스 이용::

-   만들기가 쉬움
-   느리고 무거움

## 2.javax.swing

javax.swing 패키지의 클래스 이용::

-   만들기가 힘듬
-   빠르고 가벼움

## 3.MVC 패턴::

-   M(odel):데이터를 가져와 어떤 작업을 처리하거나 처리한 작업을 저장
-   V(iew):데이터를 보여줌
-   C(ontroller):뷰와 모델 사이의 흐름제어

## 4.컴포넌트:화면을 구성하는 부품

-   컨테이너에 포함이 되어야만 화면에 출력 될 수 있는 객체
-   모든 Gui 컴포넌트의 최상의 클래스 : java.awt.Component
-   스윙 컴포넌트의 최상위 클래스:javax.swing.Jcomponent

## 5.컨테이너:컴포넌트로 부터 상속받은 하나의 윈도우 영역

-   다른 컴포넌트를 포함 가능한 GUI 컴포넌트
-   java.awt.Container를 상속받음
-   다른 컨테이너에 포함될 수 있음
-   AWT 컨테이너:Panel,Frame,Applet,Dialog,Window
-   Swing 컨테이너: 다른 컨테이너에 속하지 않고 독립적으로 존재 가능한 컨테이너
-   최상위 컨테이너:다른 컨테이너에 속하지 않고 독립적으로 존재 가능
-   스스로 화면에 자신을 출력:JFrame,JDialog,Japplet
-   모든 컴포넌트는 컨테이너에 포함되어야 비로소 출력 가능

# 나.AWT

## 1.Frame

-   응용프로그램에 윈도우를 생성하기 위해서 사용
-   기본적으로는 타이틀,최소버튼,최대버튼,종료버튼 지원
-   상위클래스 Window는 타이틀,메뉴가 지원되지 않음
-   기본적으로 화면에는 보이지 않게 설정되어 있기 때문에 setVisible(true)값으로 설정해야 화면상에 보여짐
-   Frame을 상속받아도 되고,main 메소드에서 직접 작성해서 생성 가능

# 생성자

-   Frame() :: 타이틀이 빈 상태로 생성
-   Frame(String str) :: str을 타이틀을 지정하여 프레임을 생성

# 주요메소드

-   static Frame[] getFrames() :: 애플리케이션에서 생성한 모든 프레임 리턴

-   MenuBar getMenuBar() :: 프레임의 메뉴바를 리턴

-   int getState() :: 프레임의 상태를 리턴

-   String getTitle() :: 타이틀바의 문자열 리턴

-   void remove(MenuComponent m) :: 프레임에서 지정한 메뉴를 제거

-   void setMenuBar(MenuBar mb) :: 프레임의 메뉴바를 지정

-   void setResizable(Boolean resizable) :: 프레임의 크기를 사용자가 변경할 수 있게 지정

-   void setSize(int width, int height) :: 이 컴퍼넌트의 사이즈를 width 및 height로 변경

-   void setVisible(boolean b) :: 파라미터 b값에 응해, 이 컴퍼넌트를 표시하는지 비표시로하는지 정함.

-   void setLocation(int x, int y) :: 이 컴퍼넌트를 새로운 위치로 이동

-   void setBounds(intx, inty, int width, int height) :: 위치와 크기를 설정

## Frame 예제::

    import java.awt.Frame;
	    public class JavaGui01{
		    // 메인
		    public static void main(String args[]){
			    Frame f= new Frame();
			    f.setTitle("첫 번째 프레임 입니다.");
			    f.setBounds(100, 100, 300, 300);
			    f.setVisible(true);
		}
	}

## 결과::

<img src="https://miro.medium.com/max/284/1*LGUYH6_dynDWvvjzvNkrnQ.png" width="225px" height="150px" title="px(픽셀) 크기 설정" alt="이미지1"><br/>

## 예제 2

(1)

    import java.awt.Frame;
	    // Frame 상속해서
	    public class JavaGui02 extends Frame{
		    public JavaGui02(){
			    super("두 번째 프레임입니다.");
			    setBounds(100, 100, 300, 300);
			    setVisible(true);
		}
	}

(2)

    public class Main{
	    public static void main(String args[]){
	    JavaGui02 Obj = new JavaGui02();
		}
	}

## 결과::

<img src="https://miro.medium.com/max/286/1*QDu7jDxT07OpHH1pJ_E9AA.png" width="225px" height="150px" title="px(픽셀) 크기 설정" alt="이미지2"><br/>

## 2.panel

-   컴포넌트들을 그룹 별로 묶어서 처리할 때 주로 사용
-   일반적으로 Frame 컴포넌트들을 직접 붙이지 않고 Panel에 그룹별로 붙이고 Panel을 Frame에 다시 붙임

# 생성자

-   Panel() ::  **디폴트의 레이아웃 매니저를 사용해 새로운 Panel 생성**

-   Panel( LayoutManager layout) ::  **지정된 레이아웃 매니저를 이용하여 새로운Panel**

## panel 예제::

(1)

    import java.awt.Color;
    import java.awt.Frame;
    import java.awt.Panel;
	    public class PanelTest extends Frame{
		    public PanelTest(String str){super(str);
		    Panel panel1 = new Panel();
		    // 색을 빨강으로 지정
		    panel1.setBackground(Color.RED);
		    // 추가
		    add(panel1);
		    // 크기
		    setSize(300,300);
		    setVisible(true);
		}
	}

(2)

    public class Main{
	    public static void main(String args[]){
		    new PanelTest("패널 테스트");
	    }
    }



## 결과::

<img src="https://miro.medium.com/max/284/1*K4GTQ5QHXood6MP11WSjUw.png" width="225px" height="150px" title="px(픽셀) 크기 설정" alt="이미지3"><br/>