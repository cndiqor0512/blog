---
layout: post
title:  "Nodejs 주소록 만들기"
date:   2020-09-27 09:38:13
description: "Nodejs로 주소록 만들기"
comments: true
categories: 
- blog
- programming
---

소스 코드 : [소스코드](https://github.com/cndiqor0512/contact-book)

폴더 구조 : 
<img src="https://cndiqor0512.github.io/blog/img/주소록.PNG" width="100px" height=auto>

#### 1. express 실행 및 패키지 설치
    $ mkdir contact-book
    $ cd contact-book
    $ npm init
    $ npm install --save ejs express mongoose body-parser method-override
    $ touch index.js

#### 2. Mongodb 가입 및 환경변수 설정 (검은 상자 클릭)
[Mongodb](https://www.mongodb.com/cloud/atlas)
###### 1. Start Free 클릭
<img src="https://cndiqor0512.github.io/blog/img/Mongodb1.png">

###### 2. 회원가입 하기
<img src="https://cndiqor0512.github.io/blog/img/Mongodb2.png">

###### 3. Database Acces 에서 User 추가
<img src="https://cndiqor0512.github.io/blog/img/Mongodb3.PNG">

###### 4. Network Acces 에서 IP권한 추가
<img src="https://cndiqor0512.github.io/blog/img/Mongodb4.png">

###### 5. Cluster 연결
<img src="https://cndiqor0512.github.io/blog/img/Mongodb5.png">

<img src="https://cndiqor0512.github.io/blog/img/Mongodb6.png">

<img src="https://cndiqor0512.github.io/blog/img/Mongodb7.png">

###### 6. 환경변수 추가

Window키->고급 시스템 설정 보기->환경변수->환경변수 추가(이름:MONGO_DB 변수값:방금 카피한 DB connection string)

<img src="https://cndiqor0512.github.io/blog/img/환경변수.png">

<img src="https://cndiqor0512.github.io/blog/img/환경변수2.png">


※주의※:초록색으로 된 <password> 부분은 아까 설정했던 password값으로 바꿔야 함
예시:

    mongodb+srv://test_username:test_password@cluster0.x7u3a.mongodb.net/<dbname>?retryWrites=true&w=majority


#### 3. 코드 작성
~~~javascript
    // models/Contact.js

var mongoose = require('mongoose');

var contactSchema = mongoose.Schema({
  name:{type:String, required:true, unique:true},
  email:{type:String},
  phone:{type:String}
});

var Contact = mongoose.model('contact', contactSchema);

module.exports = Contact;
~~~

~~~css
/* public/css/master.css */

.contact .contact-form,
.contact-index ul{
  max-width: 500px;
}
.contact h2{
  color: tomato;
}
.contact .contact-form label,
.contact-show label{
  display: inline-block;
  width: 70px;
}
.contact .contact-menu form{
  display: inline-block;
}
~~~

~~~javascript
// routes/contacts.js

var express = require('express');
var router = express.Router();
var Contact = require('../models/Contact'); // 1

// Index
router.get('/', function(req, res){
  Contact.find({}, function(err, contacts){
    if(err) return res.json(err);
    res.render('contacts/index', {contacts:contacts});
  });
});

// New
router.get('/new', function(req, res){
  res.render('contacts/new');
});

// create
router.post('/', function(req, res){
  Contact.create(req.body, function(err, contact){
    if(err) return res.json(err);
    res.redirect('/contacts');
  });
});

// show
router.get('/:id', function(req, res){
  Contact.findOne({_id:req.params.id}, function(err, contact){
    if(err) return res.json(err);
    res.render('contacts/show', {contact:contact});
  });
});

// edit
router.get('/:id/edit', function(req, res){
  Contact.findOne({_id:req.params.id}, function(err, contact){
    if(err) return res.json(err);
    res.render('contacts/edit', {contact:contact});
  });
});

// update
router.put('/:id', function(req, res){
  Contact.findOneAndUpdate({_id:req.params.id}, req.body, function(err, contact){
    if(err) return res.json(err);
    res.redirect('/contacts/'+req.params.id);
  });
});

// destroy
router.delete('/:id', function(req, res){
  Contact.deleteOne({_id:req.params.id}, function(err){
    if(err) return res.json(err);
    res.redirect('/contacts');
  });
});

module.exports = router;
~~~

~~~javascript
// routes/home.js
var express = require('express');
var router = express.Router(); 

// Home
router.get('/', function(req, res){
  res.redirect('/contacts');
});

module.exports = router;
~~~

~~~html
<!-- views/contacts/edit.ejs -->
<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/head') %>
  </head>
  <body>
    <%- include('../partials/nav') %>

    <div class="container contact contact-edit">
      <h2>Edit</h2>
      <form class="contact-form" action="/contacts/<%= contact._id %>?_method=put" method="post">
        <div class="form-group">
          <label for="name">Name</label>
          <input type="text" id="name" name="name" value="<%= contact.name %>" class="form-control">
        </div>
        <div class="form-group">
          <label for="email">Email</label>
          <input type="text" id="email" name="email" value="<%= contact.email %>" class="form-control">
        </div>
        <div class="form-group">
          <label for="phone">Phone</label>
          <input type="text" id="phone" name="phone" value="<%= contact.phone %>" class="form-control">
        </div>
        <div>
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </div>
    </form>
  </body>
</html>
~~~

~~~html
<!-- views/contacts/index.ejs-->

<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/head') %>
  </head>
  <body>
    <%- include('../partials/nav') %>

    <div class="contact contact-index">
      <h2>Index</h2>
      <ul class="list-group">
        <% contacts.forEach(function(contact) { %>
          <li class="list-group-item">
            <a href="/contacts/<%= contact._id %>"><%= contact.name %></a> <!-- 1 -->
          </li>
        <% }) %>
      </ul>
    </div>
  </body>
</html>
~~~

~~~html
<!-- views/contacts/new.ejs -->

<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/head') %>
  </head>
  <body>
    <%- include('../partials/nav') %>

    <div class="container contact contact-new">
      <h2>New</h2>
      <form class="contact-form" action="/contacts" method="post">
        <div class="form-group">
          <label for="name">Name</label>
          <input type="text" id="name" name="name" value="" class="form-control">
        </div>
        <div class="form-group">
          <label for="email">Email</label>
          <input type="text" id="email" name="email" value="" class="form-control">
        </div>
        <div class="form-group">
          <label for="phone">Phone</label>
          <input type="text" id="phone" name="phone" value="" class="form-control">
        </div>
        <div>
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </form>
    </div>
  </body>
</html>
~~~

~~~html
<!-- views/contacts/show.ejs -->
<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/head') %>
  </head>
  <body>
    <%- include('../partials/nav') %>

    <div class="container contact contact-show">
      <h2>Show</h2>
      <div class="card">
        <div class="card-body">
          <h3 class="card-title"><%= contact.name%></h3>
          <label>Email</label><span><%= contact.email %></span>
          <br>
          <label>Phone</label><span><%= contact.phone %></span>
        </div>
      </div>
      <div class="contact-menu mt-2">
        <a href="/contacts/<%= contact._id %>/edit" class="btn btn-light mr-2">Edit</a>
        <form action="/contacts/<%= contact._id %>?_method=delete" method="post">
          <a href="#" class="btn btn-light" onclick="confirm('Do you want to delete this?')?this.parentElement.submit():null;">Delete</a>
        </form>
      </div>
    </div>
  </body>
</html>
~~~

~~~html
<!-- views/partials/head.ejs -->

<meta name="viewport" content="width=device-width,initial-scale=1"> <!-- 1 -->

<!-- jquery & bootstrap --> <!-- 2 -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

<!-- my css -->
<link rel="stylesheet" href="/css/master.css">

<title>Contact</title>
~~~

~~~html
<!-- views/partials/nav.ejs -->

<nav class="navbar navbar-expand-sm navbar-light bg-light mb-3">
  <div class="container">
    <div class="navbar-brand">Contact Book</div>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav">
        <li class="nav-item"><a href="/contacts" class="nav-link">Index</a></li>
        <li class="nav-item"><a href="/contacts/new" class="nav-link">New</a></li>
      </ul>
    </div>
  </div>
</nav>
~~~

~~~javascript
var express = require('express');
var mongoose = require('mongoose');
var bodyParser = require('body-parser');
var methodOverride = require('method-override');
var app = express();

// DB setting
mongoose.set('useNewUrlParser', true);
mongoose.set('useFindAndModify', false);
mongoose.set('useCreateIndex', true);
mongoose.set('useUnifiedTopology', true);
mongoose.connect(process.env.MONGO_DB);
var db = mongoose.connection;
db.once('open', function(){
  console.log('DB connected');
});
db.on('error', function(err){
  console.log('DB ERROR : ', err);
});

// Other settings
app.set('view engine', 'ejs');
app.use(express.static(__dirname+'/public'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended:true}));
app.use(methodOverride('_method'))

// Routes
app.use('/', require('./routes/home')); // 1
app.use('/contacts', require('./routes/contacts')); // 2

// Port setting
var port = 3000;
app.listen(port, function(){
  console.log('server on! http://localhost:'+port);
});
~~~

#### 4. 실행
~~~
$ npm install --global nodemon
$ nodemon
~~~
아무 브라우저에서 localhost:3000을 입력
만일 에러가 뜬다면 
~~~
$ printenv
~~~
를 통해서 환경변수가 제대로 입력되었는지 확인해보자